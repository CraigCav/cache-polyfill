// https://github.com/CraigCav/cache-polyfill
// sha: f6ba4d9

!function e(r,t,o){function n(i,s){if(!t[i]){if(!r[i]){var c="function"==typeof require&&require;if(!s&&c)return c(i,!0);if(a)return a(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var l=t[i]={exports:{}};r[i][0].call(l.exports,function(e){var t=r[i][1][e];return n(t?t:e)},l,l.exports,e,r,t,o)}return t[i].exports}for(var a="function"==typeof require&&require,i=0;i<o.length;i++)n(o[i]);return n}({1:[function(e,r,t){window.caches||(window.caches=e("../lib/caches.js"))},{"../lib/caches.js":4}],2:[function(e,r,t){function o(){this._name="",this._origin=""}var n=e("./cachedb"),a=o.prototype;a.put=function(e,r){if(!(r instanceof Response))throw TypeError("Incorrect response type");return n.put(this._origin,this._name,[[e,r]])},r.exports=o},{"./cachedb":3}],3:[function(e,r,t){function o(e){var r={};return e.forEach(function(e,t){r[t.toLowerCase()]=e}),r}function n(e){return new Response(atob(e.body),{status:e.status,statusText:e.statusText,headers:e.headers})}function a(e,r){return{body:btoa(r),status:e.status,statusText:e.statusText,headers:o(e.headers)}}function i(e){return e instanceof Request||(e=new Request(e)),e}function s(){}var c=s.prototype;c.matchAcrossCaches=function(e,r,t){r=i(r);var o=localStorage.getItem(r.url);if(null===o)return Promise.resolve();var a=JSON.parse(o);return Promise.resolve(n(a))},c.openCache=function(e,r){var t=localStorage.getItem("cache-polyfill-cacheNames"),o=JSON.parse(t)||{};r in o||(o[r]={},localStorage.setItem("cache-polyfill-cacheNames",JSON.stringify(o)))},c.deleteCache=function(e,r){var t=localStorage.getItem("cache-polyfill-cacheNames");if(null===t)return Promise.resolve(!1);var o=JSON.parse(t);if(!(r in o))return Promise.resolve(!1);for(var n in o[r])localStorage.removeItem(n);return delete o[r],localStorage.setItem("cache-polyfill-cacheNames",JSON.stringify(o)),Promise.resolve(!0)},c.put=function(e,r,t){for(var o=0;o<t.length;o++){if(t[o][0]=i(t[o][0]),"GET"!=t[o][0].method)return Promise.reject(TypeError("Only GET requests are supported"));if("opaque"==t[o][1].type)return Promise.reject(TypeError("The polyfill doesn't support opaque responses (from cross-origin no-cors requests)"))}return Promise.all(t.map(function(e){return e[1].text()})).then(function(e){var o=localStorage.getItem("cache-polyfill-cacheNames");if(null===o)return Promise.resolve(!1);var n=JSON.parse(o);if(!(r in n))throw Error("Cache of that name does not exist");t.forEach(function(t,o){var i=t[0],s=t[1],c=a(s,e[o]);n[r][i.url]=1,localStorage.setItem(i.url,JSON.stringify(c))}),localStorage.setItem("cache-polyfill-cacheNames",JSON.stringify(n))}).then(function(){})},r.exports=new s},{}],4:[function(e,r,t){function o(){this._origin=location.origin}var n=e("./cachedb"),a=e("./cache"),i=o.prototype;i.match=function(e,r){return n.matchAcrossCaches(this._origin,e,r)},i.open=function(e){n.openCache(this._origin,e);var r=new a;return r._name=e,r._origin=this._origin,Promise.resolve(r)},i["delete"]=function(e){return n.deleteCache(this._origin,e)},r.exports=new o},{"./cache":2,"./cachedb":3}]},{},[1]);